{"ast":null,"code":"import _objectSpread from\"C:/Users/Utilisateur/Desktop/Clement/AUTOFORMATION/je_test_un_truc_react/portfolio/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from\"react\";import Header from\"./Header\";import Footer from\"./Footer\";import API_BASE_URL from\"./config\";import\"./Contact.css\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function Contact(){const[formData,setFormData]=useState({name:\"\",email:\"\",message:\"\",captcha:\"\"});const[captchaQuestion,setCaptchaQuestion]=useState(\"\");const[captchaAnswer,setCaptchaAnswer]=useState(null);const[loading,setLoading]=useState(false);const[toast,setToast]=useState(\"\");// Charger le captcha depuis le backend\nuseEffect(()=>{async function loadCaptcha(){try{const res=await fetch(\"\".concat(API_BASE_URL,\"/captcha\"));const data=await res.json();setCaptchaQuestion(data.question);setCaptchaAnswer(data.answer);}catch(err){console.error(\"Erreur chargement captcha :\",err);}}loadCaptcha();},[]);const handleChange=e=>setFormData(_objectSpread(_objectSpread({},formData),{},{[e.target.name]:e.target.value}));const handleSubmit=async e=>{e.preventDefault();if(parseInt(formData.captcha,10)!==captchaAnswer){showToast(\"Captcha incorrect.\");return;}setLoading(true);const payload=_objectSpread(_objectSpread({},formData),{},{captchaQuestion});try{const res=await fetch(\"\".concat(API_BASE_URL,\"/contact\"),{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(payload)});const result=await res.json();if(result.success){showToast(\"Un mail de confirmation a été envoyé. Merci de cliquer sur le lien pour valider votre message.\");setFormData({name:\"\",email:\"\",message:\"\",captcha:\"\"});const captchaRes=await fetch(\"\".concat(API_BASE_URL,\"/captcha\"));const captchaData=await captchaRes.json();setCaptchaQuestion(captchaData.question);setCaptchaAnswer(captchaData.answer);}else{showToast(result.message||\"Erreur lors de l'envoi\");}}catch(err){showToast(\"Impossible de contacter le serveur.\");}finally{setLoading(false);}};const showToast=message=>{setToast(message);setTimeout(()=>setToast(\"\"),3000);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(\"article\",{className:\"contact-page\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"CONTACTEZ-MOI\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\"Nom :\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"name\",value:formData.name,onChange:handleChange,required:true}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"Email :\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"email\",value:formData.email,onChange:handleChange,required:true}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"message\",children:\"Message :\"}),/*#__PURE__*/_jsx(\"textarea\",{name:\"message\",rows:\"5\",value:formData.message,onChange:handleChange,required:true}),/*#__PURE__*/_jsx(\"label\",{children:captchaQuestion}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"captcha\",value:formData.captcha,onChange:handleChange,required:true}),/*#__PURE__*/_jsxs(\"button\",{type:\"submit\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"btn-text\",children:\"Envoyer\"}),loading&&/*#__PURE__*/_jsx(\"span\",{className:\"spinner\",children:\"\\u23F3\"})]})]})]}),/*#__PURE__*/_jsx(\"div\",{id:\"toast\",className:\"toast \".concat(toast?\"show\":\"\"),children:toast}),/*#__PURE__*/_jsx(Footer,{})]});}export default Contact;","map":{"version":3,"names":["React","useState","useEffect","Header","Footer","API_BASE_URL","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Contact","formData","setFormData","name","email","message","captcha","captchaQuestion","setCaptchaQuestion","captchaAnswer","setCaptchaAnswer","loading","setLoading","toast","setToast","loadCaptcha","res","fetch","concat","data","json","question","answer","err","console","error","handleChange","e","_objectSpread","target","value","handleSubmit","preventDefault","parseInt","showToast","payload","method","headers","body","JSON","stringify","result","success","captchaRes","captchaData","setTimeout","children","className","onSubmit","htmlFor","type","onChange","required","rows","id"],"sources":["C:/Users/Utilisateur/Desktop/Clement/AUTOFORMATION/je_test_un_truc_react/portfolio/src/parties_communes/Contact.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nimport API_BASE_URL from \"./config\";\r\nimport \"./Contact.css\";\r\n\r\nfunction Contact() {\r\n  const [formData, setFormData] = useState({ name: \"\", email: \"\", message: \"\", captcha: \"\" });\r\n  const [captchaQuestion, setCaptchaQuestion] = useState(\"\");\r\n  const [captchaAnswer, setCaptchaAnswer] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [toast, setToast] = useState(\"\");\r\n\r\n  // Charger le captcha depuis le backend\r\n  useEffect(() => {\r\n    async function loadCaptcha() {\r\n      try {\r\n        const res = await fetch(`${API_BASE_URL}/captcha`);\r\n        const data = await res.json();\r\n        setCaptchaQuestion(data.question);\r\n        setCaptchaAnswer(data.answer);\r\n      } catch (err) {\r\n        console.error(\"Erreur chargement captcha :\", err);\r\n      }\r\n    }\r\n    loadCaptcha();\r\n  }, []);\r\n\r\n  const handleChange = (e) => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (parseInt(formData.captcha, 10) !== captchaAnswer) {\r\n      showToast(\"Captcha incorrect.\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    const payload = { ...formData, captchaQuestion };\r\n\r\n    try {\r\n      const res = await fetch(`${API_BASE_URL}/contact`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(payload)\r\n      });\r\n      const result = await res.json();\r\n\r\n      if (result.success) {\r\n        showToast(\"Un mail de confirmation a été envoyé. Merci de cliquer sur le lien pour valider votre message.\");\r\n        setFormData({ name: \"\", email: \"\", message: \"\", captcha: \"\" });\r\n\r\n        const captchaRes = await fetch(`${API_BASE_URL}/captcha`);\r\n        const captchaData = await captchaRes.json();\r\n        setCaptchaQuestion(captchaData.question);\r\n        setCaptchaAnswer(captchaData.answer);\r\n      } else {\r\n        showToast(result.message || \"Erreur lors de l'envoi\");\r\n      }\r\n    } catch (err) {\r\n      showToast(\"Impossible de contacter le serveur.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const showToast = (message) => {\r\n    setToast(message);\r\n    setTimeout(() => setToast(\"\"), 3000);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <article className=\"contact-page\">\r\n        <h1>CONTACTEZ-MOI</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <label htmlFor=\"name\">Nom :</label>\r\n          <input type=\"text\" name=\"name\" value={formData.name} onChange={handleChange} required />\r\n\r\n          <label htmlFor=\"email\">Email :</label>\r\n          <input type=\"email\" name=\"email\" value={formData.email} onChange={handleChange} required />\r\n\r\n          <label htmlFor=\"message\">Message :</label>\r\n          <textarea name=\"message\" rows=\"5\" value={formData.message} onChange={handleChange} required />\r\n\r\n          <label>{captchaQuestion}</label>\r\n          <input type=\"text\" name=\"captcha\" value={formData.captcha} onChange={handleChange} required />\r\n\r\n          <button type=\"submit\">\r\n            <span className=\"btn-text\">Envoyer</span>\r\n            {loading && <span className=\"spinner\">⏳</span>}\r\n          </button>\r\n        </form>\r\n      </article>\r\n\r\n      <div id=\"toast\" className={`toast ${toast ? \"show\" : \"\"}`}>{toast}</div>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Contact;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}