{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Desktop\\\\Clement\\\\AUTOFORMATION\\\\je_test_un_truc_react\\\\portfolio\\\\src\\\\parties_communes\\\\Contact.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport \"./contact.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Contact() {\n  _s();\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    message: \"\",\n    captcha: \"\"\n  });\n  const [captchaQuestion, setCaptchaQuestion] = useState(\"\");\n  const [captchaAnswer, setCaptchaAnswer] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [formStatus, setFormStatus] = useState(\"\");\n  const [toast, setToast] = useState(\"\");\n\n  // Charger le captcha depuis le backend\n  useEffect(() => {\n    async function loadCaptcha() {\n      try {\n        const res = await fetch(\"http://localhost:3000/captcha\");\n        const data = await res.json();\n        setCaptchaQuestion(data.question);\n        setCaptchaAnswer(data.answer);\n      } catch (err) {\n        console.error(\"Erreur chargement captcha :\", err);\n      }\n    }\n    loadCaptcha();\n  }, []);\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (parseInt(formData.captcha, 10) !== captchaAnswer) {\n      showToast(\"Captcha incorrect.\");\n      return;\n    }\n    setLoading(true);\n    setFormStatus(\"\");\n    const payload = {\n      ...formData,\n      captchaQuestion\n    };\n    try {\n      const res = await fetch(\"http://localhost:3000/contact\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(payload)\n      });\n      const result = await res.json();\n      if (result.success) {\n        showToast(\"Message envoyÃ© ! Merci\");\n        setFormData({\n          name: \"\",\n          email: \"\",\n          message: \"\",\n          captcha: \"\"\n        });\n        // Recharger un nouveau captcha\n        const captchaRes = await fetch(\"http://localhost:3000/captcha\");\n        const captchaData = await captchaRes.json();\n        setCaptchaQuestion(captchaData.question);\n        setCaptchaAnswer(captchaData.answer);\n      } else {\n        showToast(result.message || \"Erreur lors de l'envoi\");\n      }\n    } catch (err) {\n      setFormStatus(\"Impossible de contacter le serveur.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const showToast = message => {\n    setToast(message);\n    setTimeout(() => setToast(\"\"), 3000);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"contact-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"CONTACTEZ-MOI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Nom :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          value: formData.name,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"message\",\n          children: \"Message :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"message\",\n          name: \"message\",\n          rows: \"5\",\n          value: formData.message,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: captchaQuestion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"captcha\",\n          name: \"captcha\",\n          value: formData.captcha,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"btn-text\",\n            children: \"Envoyer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), loading && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"spinner\",\n            children: \"\\u23F3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), formStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"formStatus\",\n        children: formStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"toast\",\n      className: `toast ${toast ? \"show\" : \"\"}`,\n      children: toast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Contact, \"Ludnoht5dDqG8Z30Mh2Orya5RUc=\");\n_c = Contact;\nexport default Contact;\nvar _c;\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["React","useState","useEffect","Header","Footer","jsxDEV","_jsxDEV","Fragment","_Fragment","Contact","_s","formData","setFormData","name","email","message","captcha","captchaQuestion","setCaptchaQuestion","captchaAnswer","setCaptchaAnswer","loading","setLoading","formStatus","setFormStatus","toast","setToast","loadCaptcha","res","fetch","data","json","question","answer","err","console","error","handleChange","e","target","value","handleSubmit","preventDefault","parseInt","showToast","payload","method","headers","body","JSON","stringify","result","success","captchaRes","captchaData","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","htmlFor","type","id","onChange","required","rows","_c","$RefreshReg$"],"sources":["C:/Users/Utilisateur/Desktop/Clement/AUTOFORMATION/je_test_un_truc_react/portfolio/src/parties_communes/Contact.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nimport \"./contact.css\";\r\n\r\nfunction Contact() {\r\n  const [formData, setFormData] = useState({ name: \"\", email: \"\", message: \"\", captcha: \"\" });\r\n  const [captchaQuestion, setCaptchaQuestion] = useState(\"\");\r\n  const [captchaAnswer, setCaptchaAnswer] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [formStatus, setFormStatus] = useState(\"\");\r\n  const [toast, setToast] = useState(\"\");\r\n\r\n  // Charger le captcha depuis le backend\r\n  useEffect(() => {\r\n    async function loadCaptcha() {\r\n      try {\r\n        const res = await fetch(\"http://localhost:3000/captcha\");\r\n        const data = await res.json();\r\n        setCaptchaQuestion(data.question);\r\n        setCaptchaAnswer(data.answer);\r\n      } catch (err) {\r\n        console.error(\"Erreur chargement captcha :\", err);\r\n      }\r\n    }\r\n    loadCaptcha();\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (parseInt(formData.captcha, 10) !== captchaAnswer) {\r\n      showToast(\"Captcha incorrect.\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setFormStatus(\"\");\r\n\r\n    const payload = {\r\n      ...formData,\r\n      captchaQuestion\r\n    };\r\n\r\n    try {\r\n      const res = await fetch(\"http://localhost:3000/contact\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(payload)\r\n      });\r\n      const result = await res.json();\r\n\r\n      if (result.success) {\r\n        showToast(\"Message envoyÃ© ! Merci\");\r\n        setFormData({ name: \"\", email: \"\", message: \"\", captcha: \"\" });\r\n        // Recharger un nouveau captcha\r\n        const captchaRes = await fetch(\"http://localhost:3000/captcha\");\r\n        const captchaData = await captchaRes.json();\r\n        setCaptchaQuestion(captchaData.question);\r\n        setCaptchaAnswer(captchaData.answer);\r\n      } else {\r\n        showToast(result.message || \"Erreur lors de l'envoi\");\r\n      }\r\n    } catch (err) {\r\n      setFormStatus(\"Impossible de contacter le serveur.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const showToast = (message) => {\r\n    setToast(message);\r\n    setTimeout(() => setToast(\"\"), 3000);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <article className=\"contact-page\">\r\n        <h1>CONTACTEZ-MOI</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <label htmlFor=\"name\">Nom :</label>\r\n          <input type=\"text\" id=\"name\" name=\"name\" value={formData.name} onChange={handleChange} required />\r\n\r\n          <label htmlFor=\"email\">Email :</label>\r\n          <input type=\"email\" id=\"email\" name=\"email\" value={formData.email} onChange={handleChange} required />\r\n\r\n          <label htmlFor=\"message\">Message :</label>\r\n          <textarea id=\"message\" name=\"message\" rows=\"5\" value={formData.message} onChange={handleChange} required />\r\n\r\n          <label>{captchaQuestion}</label>\r\n          <input type=\"text\" id=\"captcha\" name=\"captcha\" value={formData.captcha} onChange={handleChange} required />\r\n\r\n          <button type=\"submit\">\r\n            <span className=\"btn-text\">Envoyer</span>\r\n            {loading && <span className=\"spinner\">â³</span>}\r\n          </button>\r\n        </form>\r\n\r\n        {formStatus && <p id=\"formStatus\">{formStatus}</p>}\r\n      </article>\r\n\r\n      <div id=\"toast\" className={`toast ${toast ? \"show\" : \"\"}`}>{toast}</div>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Contact;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEvB,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC;IAAEY,IAAI,EAAE,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEC,OAAO,EAAE,EAAE;IAAEC,OAAO,EAAE;EAAG,CAAC,CAAC;EAC3F,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACkB,aAAa,EAAEC,gBAAgB,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACoB,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACsB,UAAU,EAAEC,aAAa,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACwB,KAAK,EAAEC,QAAQ,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACAC,SAAS,CAAC,MAAM;IACd,eAAeyB,WAAWA,CAAA,EAAG;MAC3B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,+BAA+B,CAAC;QACxD,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;QAC7Bb,kBAAkB,CAACY,IAAI,CAACE,QAAQ,CAAC;QACjCZ,gBAAgB,CAACU,IAAI,CAACG,MAAM,CAAC;MAC/B,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,6BAA6B,EAAEF,GAAG,CAAC;MACnD;IACF;IACAP,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMU,YAAY,GAAIC,CAAC,IAAK;IAC1B1B,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAE,CAAC2B,CAAC,CAACC,MAAM,CAAC1B,IAAI,GAAGyB,CAAC,CAACC,MAAM,CAACC;IAAM,CAAC,CAAC;EAC/D,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOH,CAAC,IAAK;IAChCA,CAAC,CAACI,cAAc,CAAC,CAAC;IAClB,IAAIC,QAAQ,CAAChC,QAAQ,CAACK,OAAO,EAAE,EAAE,CAAC,KAAKG,aAAa,EAAE;MACpDyB,SAAS,CAAC,oBAAoB,CAAC;MAC/B;IACF;IAEAtB,UAAU,CAAC,IAAI,CAAC;IAChBE,aAAa,CAAC,EAAE,CAAC;IAEjB,MAAMqB,OAAO,GAAG;MACd,GAAGlC,QAAQ;MACXM;IACF,CAAC;IAED,IAAI;MACF,MAAMW,GAAG,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;QACvDiB,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,OAAO;MAC9B,CAAC,CAAC;MACF,MAAMM,MAAM,GAAG,MAAMvB,GAAG,CAACG,IAAI,CAAC,CAAC;MAE/B,IAAIoB,MAAM,CAACC,OAAO,EAAE;QAClBR,SAAS,CAAC,wBAAwB,CAAC;QACnChC,WAAW,CAAC;UAAEC,IAAI,EAAE,EAAE;UAAEC,KAAK,EAAE,EAAE;UAAEC,OAAO,EAAE,EAAE;UAAEC,OAAO,EAAE;QAAG,CAAC,CAAC;QAC9D;QACA,MAAMqC,UAAU,GAAG,MAAMxB,KAAK,CAAC,+BAA+B,CAAC;QAC/D,MAAMyB,WAAW,GAAG,MAAMD,UAAU,CAACtB,IAAI,CAAC,CAAC;QAC3Cb,kBAAkB,CAACoC,WAAW,CAACtB,QAAQ,CAAC;QACxCZ,gBAAgB,CAACkC,WAAW,CAACrB,MAAM,CAAC;MACtC,CAAC,MAAM;QACLW,SAAS,CAACO,MAAM,CAACpC,OAAO,IAAI,wBAAwB,CAAC;MACvD;IACF,CAAC,CAAC,OAAOmB,GAAG,EAAE;MACZV,aAAa,CAAC,qCAAqC,CAAC;IACtD,CAAC,SAAS;MACRF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMsB,SAAS,GAAI7B,OAAO,IAAK;IAC7BW,QAAQ,CAACX,OAAO,CAAC;IACjBwC,UAAU,CAAC,MAAM7B,QAAQ,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;EACtC,CAAC;EAED,oBACEpB,OAAA,CAAAE,SAAA;IAAAgD,QAAA,gBACElD,OAAA,CAACH,MAAM;MAAAsD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVtD,OAAA;MAASuD,SAAS,EAAC,cAAc;MAAAL,QAAA,gBAC/BlD,OAAA;QAAAkD,QAAA,EAAI;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtBtD,OAAA;QAAMwD,QAAQ,EAAErB,YAAa;QAAAe,QAAA,gBAC3BlD,OAAA;UAAOyD,OAAO,EAAC,MAAM;UAAAP,QAAA,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACnCtD,OAAA;UAAO0D,IAAI,EAAC,MAAM;UAACC,EAAE,EAAC,MAAM;UAACpD,IAAI,EAAC,MAAM;UAAC2B,KAAK,EAAE7B,QAAQ,CAACE,IAAK;UAACqD,QAAQ,EAAE7B,YAAa;UAAC8B,QAAQ;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAElGtD,OAAA;UAAOyD,OAAO,EAAC,OAAO;UAAAP,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACtCtD,OAAA;UAAO0D,IAAI,EAAC,OAAO;UAACC,EAAE,EAAC,OAAO;UAACpD,IAAI,EAAC,OAAO;UAAC2B,KAAK,EAAE7B,QAAQ,CAACG,KAAM;UAACoD,QAAQ,EAAE7B,YAAa;UAAC8B,QAAQ;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAEtGtD,OAAA;UAAOyD,OAAO,EAAC,SAAS;UAAAP,QAAA,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC1CtD,OAAA;UAAU2D,EAAE,EAAC,SAAS;UAACpD,IAAI,EAAC,SAAS;UAACuD,IAAI,EAAC,GAAG;UAAC5B,KAAK,EAAE7B,QAAQ,CAACI,OAAQ;UAACmD,QAAQ,EAAE7B,YAAa;UAAC8B,QAAQ;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAE3GtD,OAAA;UAAAkD,QAAA,EAAQvC;QAAe;UAAAwC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAChCtD,OAAA;UAAO0D,IAAI,EAAC,MAAM;UAACC,EAAE,EAAC,SAAS;UAACpD,IAAI,EAAC,SAAS;UAAC2B,KAAK,EAAE7B,QAAQ,CAACK,OAAQ;UAACkD,QAAQ,EAAE7B,YAAa;UAAC8B,QAAQ;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAE3GtD,OAAA;UAAQ0D,IAAI,EAAC,QAAQ;UAAAR,QAAA,gBACnBlD,OAAA;YAAMuD,SAAS,EAAC,UAAU;YAAAL,QAAA,EAAC;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,EACxCvC,OAAO,iBAAIf,OAAA;YAAMuD,SAAS,EAAC,SAAS;YAAAL,QAAA,EAAC;UAAC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,EAENrC,UAAU,iBAAIjB,OAAA;QAAG2D,EAAE,EAAC,YAAY;QAAAT,QAAA,EAAEjC;MAAU;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eAEVtD,OAAA;MAAK2D,EAAE,EAAC,OAAO;MAACJ,SAAS,EAAE,SAASpC,KAAK,GAAG,MAAM,GAAG,EAAE,EAAG;MAAA+B,QAAA,EAAE/B;IAAK;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACxEtD,OAAA,CAACF,MAAM;MAAAqD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACV,CAAC;AAEP;AAAClD,EAAA,CAxGQD,OAAO;AAAA4D,EAAA,GAAP5D,OAAO;AA0GhB,eAAeA,OAAO;AAAC,IAAA4D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}